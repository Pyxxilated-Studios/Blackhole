name: Release

on:
  push:
    branches: ["main"]
    tags: ["v*"]
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/**"
      - "*.md"
      - ".*ignore"
      - "benches/**"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        file: [Dockerfile, Dockerfile.alpine, Dockerfile.distroless]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Prefix
        id: prefix
        run: |
          FILE=${{ matrix.file }}
          PREFIX=${FILE##*.}
          if [ ${PREFIX} = "Dockerfile" ]
          then
              PREFIX=""
          else
              PREFIX="${PREFIX}-"
          fi
          echo "PREFIX=$PREFIX" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            prefix=${{ steps.prefix.outputs.PREFIX }},onlatest=true
          tags: |
            type=ref,event=tag,
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.file }}
